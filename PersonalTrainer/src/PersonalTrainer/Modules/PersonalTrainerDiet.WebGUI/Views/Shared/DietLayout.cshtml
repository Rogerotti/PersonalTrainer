@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Index";
    Layout = "Layout";
}
<body>
    @RenderBody()
</body>

@section LeftPanel
{
    <div class="ui left vertical menu">
            <div class="ui medium inverted blue left top vertical menu">
                <div class="item">
                    <div class="ui header">Dieta</div>
                    <div class="menu">
                        <a class="item" asp-controller="Diet" asp-action="Day">Dzisiaj</a>
                    </div>
                </div>
                <div class="item">
                    <div class="header">Moje produkty</div>
                    <div class="menu">
                        <a class="item" asp-controller="Diet" asp-action="ProductList">Baza produktów</a>
                        <a class="item" asp-controller="Diet" asp-action="AddProduct">Dodaj produkt</a>
                    </div>
                </div>

                <div class="item">
                    <div class="header">Ustawienia</div>
                    <div class="menu">
                        <a class="item" asp-controller="Diet" asp-action="UserGoals">Cele</a>
                    </div>
                </div>
            </div>
    </div>
}

@section Scripts
    {

    <script>  $('.ui.dropdown').dropdown();</script>

    <script>
        $(document).ready(function () {
            $('.sortable.table').tablesort();
        });
    </script>

    <script>

        function showDetails(b)
        {
            var rows = $('#table > tbody > tr')
            for (var i = 0; i < rows.length; i++)
                rows.eq(i).attr('class', ' ');

            $(b).attr('class', 'active')

            var guidId = $("[id='selectedProductId']", b).val();
            var data = { Id: guidId };

            $.ajax({
            url: '@Url.Action("GetProductDetails", "Diet")',
            type: "POST",
            data: JSON.stringify(data),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (msg)
            {
                $('#detailsName').text(msg.name);
                $('#detailsManufacturer').text(msg.manufacturer);
                $('#detailsCalories').text(msg.macro.calories);
                $('#detailsProtein').text(msg.macro.protein);
                $('#detailsFat').text(msg.macro.fat);
                $('#detailsCarbs').text(msg.macro.carbohydrates);
                $('#detailsType').text(msg.type);
                $('#editButton').removeAttr('disabled');
                $('#deleteButton').removeAttr('disabled');
              
                $('input[name="productId"]').val(guidId);
                $('input[name="productDeleteId"]').val(guidId);
                var state = msg.state;
                if (state == 0 || state == 2)
                {
                    $('#cancelSubscribeButton').attr('disabled','');
                    $('#subscribeButton').removeAttr('disabled');
                    $('input[name="productSubscribeId"]').val(guidId);
                }
                else if (state == 1) {
                    $('#cancelSubscribeButton').removeAttr('disabled');
                    $('#subscribeButton').attr('disabled', '');
                    $('input[name="productCancelSubscribeId"]').val(guidId);
                }
                else
                {
                    $('#editButton').attr('disabled', '');
                    $('#deleteButton').attr('disabled', '');
                    $('#subscribeButton').attr('disabled', '');
                    $('#cancelSubscribeButton').attr('disabled', '');
                } 
                    
              
            },

            error: function (xhr, ajaxOptions, thrownError)
            {
                alert(xhr.status);
                alert(thrownError);
            }
        });
        }
    </script>

    <script>
        $('.tabular.menu .item').tab();
    </script>

    <script>
        $('#search-field').on('keyup', function (e) {
            if ('' != this.value) {
                var reg = new RegExp(this.value, 'i'); // case-insesitive

                $('.table tbody').find('tr').each(function () {
                    var $me = $(this);
                    if (!$me.children('td:eq(2)').text().match(reg)) {
                        $me.hide();
                    } else {
                        $me.show();
                    }
                });
            } else {
                $('.table tbody').find('tr').show();
            }
        });
    </script>
 
    <script>
        $('.test2').on('keyup', function (e)
        {
            if (!this.value.trim())
            {
                this.value = 0;
            }
            else
            {
                if (!$.isNumeric(this.value))
                    this.value = this.value.substring(0, this.value.length - 1);
                if(this.value.length > 10)
                    this.value = this.value.substring(0, this.value.length - 1);
            }
        });
    </script>

<script>
    $(document).ready(function ()
    {
        $(".NumericValidation").keydown(function (e)
        {
            // Sprawdzenie znaków specjalnych.
            if (KeyIsSpecialCharacter(e))
                return;

            var selectionLength = this.selectionEnd - this.selectionStart
            if (selectionLength != this.value.length)
            {
                if (this.value[0] == 0) {
                    e.preventDefault();
                    return;
                }
            }

            // Upewnia się że jest to liczba jeżeli nie stopuje wciśnięcie
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) )
                e.preventDefault();
        });

        //TODO sprawdzenie procentów
        $('.CheckPercentage').on('keyup', function (e)
        {
            var input = document.getElementById("PercentageFatInput")
        
            if (input.value < 0) input.value = 0;
            if (input.value > 100) input.value = 100;
        });




        function KeyIsSpecialCharacter(e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                // Pozwala na: Ctrl+A
           (e.keyCode == 65 && e.ctrlKey === true) ||
                // Pozwala na: Ctrl+C
           (e.keyCode == 67 && e.ctrlKey === true) ||
                // Pozwala na: Ctrl+X
           (e.keyCode == 88 && e.ctrlKey === true) ||
                // Pozwala na: home, end, left, right
           (e.keyCode >= 35 && e.keyCode <= 39)) { return true; }

            return false
        }
        UpdateCurrenCalories()
    })

 

    $('.BreakfestTable').on('keyup', ".ChangeMacro", function (e) {

        var input = $(this).children();
        var newQuant = input.val();
        var tr = $(this).parent().parent();

        var protein = tr[0].cells[2].innerHTML
        var fat = tr[0].cells[3].innerHTML
        var carbs = tr[0].cells[4].innerHTML
        var calories = tr[0].cells[5].innerHTML

        var prevQuant =  parseFloat(tr[0].cells[9].children[0].value);
        var prevProtein = parseFloat(tr[0].cells[10].children[0].value);
        var prevFat = parseFloat(tr[0].cells[11].children[0].value);
        var prevCarb = parseFloat(tr[0].cells[12].children[0].value);
        var prevCalories = parseFloat(tr[0].cells[13].children[0].value);

        var ratio = Math.round(newQuant * 100.0 / prevQuant) / 100

        var ress = prevProtein * ratio;
        tr[0].cells[2].innerHTML = Math.round(prevProtein * ratio * 100)/100;
        tr[0].cells[3].innerHTML = Math.round(prevFat * ratio * 100) / 100;
        tr[0].cells[4].innerHTML = Math.round(prevCarb * ratio * 100) / 100;
        tr[0].cells[5].innerHTML = Math.round(prevCalories * ratio * 100) / 100;

        UpdateCurrenCalories()
    });

    $('.BreakfestTable').on('click', ".DeleteMacro", function (e) {
        var tr = $(this).parent().parent();
        var body = tr.parent();
        var table = body.parent();
        tr.remove();
        if (body[0].childElementCount == 0)
        {
            table.remove();
        }
        UpdateCurrenCalories()
    });

    function UpdateCurrenCalories()
    {
        var proteins = document.getElementsByName("productProtein")
        var fats = document.getElementsByName("productFat")
        var carbs = document.getElementsByName("productCarbs")
        var calories = document.getElementsByName("productCalories")

        var proteinCount = parseFloat(0)
        var fatCount = parseFloat(0)
        var carbsnCount = parseFloat(0)
        var caloriesCount = parseFloat(0)

        for (var i = 0; i < proteins.length; i++) {
            proteinCount += parseFloat(proteins[i].innerHTML)
            fatCount += parseFloat(fats[i].innerHTML)
            carbsnCount += parseFloat(carbs[i].innerHTML)
            caloriesCount += parseFloat(calories[i].innerHTML)
        }

        document.getElementById("CurrentProtein").innerHTML = proteinCount
        document.getElementById("CurrentFat").innerHTML = fatCount
        document.getElementById("CurrentCarbs").innerHTML = carbsnCount
        document.getElementById("CurrentCalories").innerHTML = caloriesCount

        var avaibleProteins = parseFloat(document.getElementById("AvaibleProtein").innerHTML)
        var avaibleFat = parseFloat(document.getElementById("AvaibleFat").innerHTML)
        var avaibleCarbs = parseFloat(document.getElementById("AvaibleCarbs").innerHTML)
        var avaibleCalories = parseFloat(document.getElementById("AvaibleCalories").innerHTML)


        var resultProteins = avaibleProteins - proteinCount;
        var resultFat = avaibleFat - fatCount;
        var resultCarbs = avaibleCarbs - carbsnCount;
        var resultCalories = avaibleCalories - caloriesCount;

        var proteinElement = document.getElementById("ResultProtein")
        SetFontColorDepensOnCalories(proteinElement, resultProteins)
        proteinElement.innerHTML = Math.round(resultProteins * 100) / 100

        var fatElement = document.getElementById("ResultFat")
        SetFontColorDepensOnCalories(fatElement, resultFat)
        fatElement.innerHTML = Math.round(resultFat* 100) / 100

        var carbsElement = document.getElementById("ResultCarbs")
        SetFontColorDepensOnCalories(carbsElement, resultCarbs)
        carbsElement.innerHTML = Math.round(resultCarbs * 100) / 100
      
        var caloriesElement = document.getElementById("ResultCalories")
        SetFontColorDepensOnCalories(caloriesElement, resultCalories)
        caloriesElement.innerHTML = Math.round(resultCalories * 100) / 100
    }

    // Ustawia kolor czcionki w zależności od ilości kalori
    // dodatnie zielone
    // równe 0 czarne
    // ujemne czerwone
    function SetFontColorDepensOnCalories(element, amount)
    {
        if (amount > 0)
            element.style.color = "Green"
        else if (amount == 0)
            element.style.color = "Black"
        else
            element.style.color = "Red"
    }




</script>
}



