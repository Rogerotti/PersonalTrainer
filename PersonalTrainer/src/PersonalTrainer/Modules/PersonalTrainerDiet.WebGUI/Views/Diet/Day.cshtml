@model  Framework.Models.DayView
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "test";
    Layout = "DietLayout";
}

<style>

   td.h2 {
color: red;
}
        pad-right {
        padding-right: 2em;
    }

    pad-top {
        padding-top: 2em;
    }

    pad-bottom {
        padding-bottom: 2em;
    }

    .margin-top {
        margin-top: 2em;
    }

        .margin-bottom {
        margin-bottom: 2em;
    }
</style>

<body>

    <form asp-action="Day" asp-controller="Diet" method="post">
        <div class="ui medium header">Breakfest</div>
        <div class="ui divider"></div>
        <div class="margin-bottom" >
            @{
                if (Model.DailyProduct.Any(x => x.MealType == Framework.Models.MealType.Breakfast))
                {
                    var result = Model.DailyProduct.Where(x => x.MealType == Framework.Models.MealType.Breakfast);
                    @await Component.InvokeAsync("DailyProductTable", new { list = result.ToList() })
                }
            }
        </div>
        <button class="ui basic button" value="0" name="buttonType">
            <i class="food icon"></i>
            Add Meal
        </button>

        <div class="ui medium header">Dinner</div>
        <div class="ui divider"></div>
        <div class="margin-bottom">
            @{
                if (Model.DailyProduct.Any(x => x.MealType == Framework.Models.MealType.Dinner))
                {
                    var result = Model.DailyProduct.Where(x => x.MealType == Framework.Models.MealType.Dinner);
                    @await Component.InvokeAsync("DailyProductTable", new { list = result.ToList() })
                }
            }
        </div>
        <button class="ui basic button" value="1" name="buttonType">
            <i class="food icon"></i>
            Add Meal
        </button>

        <div class="ui medium header">Supper</div>
        <div class="ui divider"></div>
        <div class="margin-bottom">
            @{
                if (Model.DailyProduct.Any(x => x.MealType == Framework.Models.MealType.Supper))
                {
                    var result = Model.DailyProduct.Where(x => x.MealType == Framework.Models.MealType.Supper);
                    @await Component.InvokeAsync("DailyProductTable", new { list = result.ToList() })
                }
            }
        </div>
        <button class="ui basic button" value="2" name="buttonType">
            <i class="food icon"></i>
            Add Meal
        </button>

        <div class="ui medium header">Snacks</div>
        <div class="ui divider"></div>
        <div class="margin-bottom">
            @{
                if (Model.DailyProduct.Any(x => x.MealType == Framework.Models.MealType.Snacks))
                {
                    var result = Model.DailyProduct.Where(x => x.MealType == Framework.Models.MealType.Snacks);
                    @await Component.InvokeAsync("DailyProductTable", new { list = result.ToList() })
                }
            }
        </div>
        <button class="ui basic button" value="3" name="buttonType">
            <i class="food icon"></i>
            Add Meal
        </button>

        <div class="ui divider"></div>

        <table class="ui very basic table">
            <thead>
                <tr>
                    <th></th>
                    <th>Total Protein</th>
                    <th>Total Fat</th>
                    <th>Total Carbs</th>
                    <th>Total Calories</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Current</td>
                    <td id="CurrentProtein">@Model.DayProteins</td>
                    <td id="CurrentFat">@Model.DayFat</td>
                    <td id="CurrentCarbs">@Model.DayCarbohydrates</td>
                    <td id="CurrentCalories">@Model.DayCalories</td>
                </tr>

                <tr>
                    <td>Avaible</td>
                    <td id="AvaibleProtein">@Model.AvaibleProteins</td>
                    <td id="AvaibleFat">@Model.AvaibleFat</td>
                    <td id="AvaibleCarbs">@Model.AvaibleCarbohydrates</td>
                    <td id="AvaibleCalories">@Model.AvaibleCalories</td>
                </tr>

                <tr>
                    <td></td>
                    <td id="ResultProtein"></td>
                    <td id="ResultFat"></td>
                    <td id="ResultCarbs"></td>
                    <td id="ResultCalories"></td>
                </tr>
            </tbody>
        </table>
        <button class="ui blue button" value="4" name="buttonType">
            Zatwierdź
        </button>
    </form>


</body>


